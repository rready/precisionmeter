@model Meter.Models.Batch

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
@{ 
    var notedate = DateTime.Now;
    var notes = $"Batch Inserted by {User.Identity.Name} on {notedate}";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Batch</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Company", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.DropDownListFor("SelectedEmployee", new SelectList((System.Collections.IEnumerable)ViewData["Cust"], "Custid", "Company"), new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.Custid, new SelectList((System.Collections.IEnumerable)ViewData["Cust"],"Custid","Company"), new { @class = "form-control" })
            </div>
            @Html.Label("Date Entered", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.BatchDate,  new { @Value = @DateTime.Now.ToShortDateString(), @class = "form-control" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("Total Meters", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Totaldone, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Totaldone, "", new { @class = "text-danger" }*@
                @*@Html.TextBoxFor(model => model.Totaldone, new { @Value = 0, @class = "form-control" })*@
            </div>
            @Html.Label("Printed", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.printed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.printed, "", new { @class = "text-danger" })*@
                @Html.TextBoxFor(model => model.printed, new { @Value = "", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.BatchStatus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BatchStatus, "", new { @class = "text-danger" })*@
                @Html.TextBoxFor(model => model.BatchStatus, new { @Value = "Active", @class = "form-control" })
            </div>
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })*@
                @Html.TextBoxFor(model => model.Notes, new { @Value = notes, @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
